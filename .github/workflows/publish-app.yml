name: Publish app

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME_WEB: web
  IMAGE_NAME_API: api  
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  GIT_USERNAME: "${{ github.actor }}"
  GIT_REF: "${{ github.ref }}"
  GIT_REPO: "${{ github.repository }}"
jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build --file ./infra/nginx/Dockerfile .
            docker build --file ./packages/backend/Dockerfile .
          fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

# Release Web Image
      - name: Build and Push Web image
        run: |
          ./bin/releaseTo.sh web --file ./infra/nginx/Dockerfile -r github           
# Release API Image
      - name: Build and Push Api image
        run: |
          ./bin/releaseTo.sh api --file ./packages/backend/Dockerfile -r github          

# Release to Heroku
      - name: Publish to heroku
        env : 
            HEROKU_APP_WEB: are-you-ready-live
            HEROKU_APP_API: are-you-ready-api
            HEROKU_API_KEY : ${{ secrets.HEROKU_API_KEY }}
        run : |
          ./bin/releaseTo.sh $IMAGE_NAME_WEB -n $HEROKU_APP_WEB -r heroku
