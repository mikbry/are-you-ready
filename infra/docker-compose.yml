version: '3'

services:
  backend:
    image: ${COMPOSE_PROJECT_NAME}_backend:prod
    build:
      context: ../packages/backend
      dockerfile: Dockerfile
      args:
        buildno: 1
    volumes:
      - ../public/${APP_UPLOAD_PATH}:/app/${APP_UPLOAD_PATH}
    expose:
      - ${APP_BACKEND_PORT}    
    environment:
      - NODE_ENV
      - APP_NAME
      - APP_BACKEND_PORT
      - APP_DATABASE_PROVIDER
      - APP_DATABASE_NAME
      - APP_DATABASE_PORT
      - APP_DATABASE_URL
      - APP_DATABASE_SECURE
      - APP_DATABASE_SECURE_VALIDATE
      - APP_DATABASE_SECURE_PASS
      - APP_CERTIFICATES_PATH
      - APP_UPLOAD_PATH
      - APP_UPLOAD_MAXSIZE
      - APP_USE_COOKIES
    ports:
      - ${APP_BACKEND_PORT}:${APP_BACKEND_PORT}
    links:
      - mongo
    command: bash -c "yarn start"
    networks: 
      - private

  mongo:
    image: mongo
    restart: always
    networks: 
      - private

  web:
    image: ${COMPOSE_PROJECT_NAME}_web:prod
    build: nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    networks: 
      - private
      - public
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./certs:/etc/nginx/certs
    environment:
      - APP_FRONT_DOMAIN
      - APP_API_DOMAIN
      - APP_NAME
      - APP_BACKEND_URL
      - APP_UPLOAD_MAXSIZE
certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./certs:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
networks:
  public: 
  private: 